class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int min, max_profit=0;
        min=prices[0];
        for(int i=0;i<prices.size();i++)
        {
            if(prices[i]<min)
            {
                min=prices[i];
            }
            int profit=prices[i]-min;
            max_profit=max(profit,max_profit);        
        }
        return max_profit;
    }
};
//naive approach- using 2 for loops and calculating the profit every time. tc is n^2
//another approach- using an auxillary array and storing the max element starting from the end. uses A.S.
//optimised approach- by finding the min element before the current element(assuming the current element to be the max price) and calculating the profit every time
